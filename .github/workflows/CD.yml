name: CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  start-minikube:
    name: Start Minikube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Start Minikube
        id: minikube
        uses: medyagh/setup-minikube@latest

  build-backend:
    name: Build Backend JAR
    runs-on: ubuntu-latest
    needs: start-minikube
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK 18
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '18'
      - name: Build JAR
        run: |
          cd Spring
          ./mvnw clean install
      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: backend-jar
          path: Spring/target/*.jar

  deploy-backend:
    name: CD Pipeline - Backend
    runs-on: ubuntu-latest
    needs: [start-minikube, build-backend]
    steps:
      - uses: actions/checkout@v4
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: backend-jar
          path: Spring/target/
      - name: Build Docker Image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          cd Spring
          docker build -t backend/assignment .
          echo "Verifying images: "
          docker images
      - name: Tar file creation
        run: |
          docker image save -o backend.tar backend/assignment
      - name: Load Docker Image into Minikube
        run: |
          minikube image load backend.tar
      - name: Deploy to Minikube
        run: |
          cd k8s-configs
          kubectl apply -f backend-service.yaml
          kubectl apply -f backend-deployment.yaml
      - name: Test pods
        run: |
          kubectl get pods
      - name: Test service
        run: |
          kubectl get services

  deploy-frontend:
    name: CD Pipeline - Frontend
    runs-on: ubuntu-latest
    needs: start-minikube
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Build Docker Image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          cd React
          docker build -t frontend/assignment .
          echo "Verifying images: "
          docker images
      - name: Tar file creation
        run: |
          docker image save -o frontend.tar frontend/assignment
      - name: Load Docker Image into Minikube
        run: |
          minikube image load frontend.tar
      - name: Deploy to Minikube
        run: |
          cd k8s-configs
          kubectl apply -f frontend-service.yaml
          kubectl apply -f frontend-deployment.yaml
      - name: Test pods
        run: |
          kubectl get pods
      - name: Test service
        run: |
          kubectl get services
