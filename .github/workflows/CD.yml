name: CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  start-minikube:
    name: Start Minikube
    runs-on: ubuntu-latest
    steps:
      - name: Set up Minikube and kubectl
        run: |
          sudo apt-get update -y
          sudo apt-get install -y apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update -y
          sudo apt-get install -y kubectl
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
      - name: Deploy to Minikube
        run: |
          minikube start --driver=docker
          eval $(minikube -p minikube docker-env)
  deploy-backend:
    name: CD Pipeline - Backend
    runs-on: ubuntu-latest
    needs: start-minikube
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK 18
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '18'
      - name: Build Docker Image
        run: |
          cd Spring
          docker build -t backend/assignment .
          echo "Verifying images: "
          docker images
      - name: Deploy to Minikube
        run: |
          docker image save -o backend.tar backend/assignment
          minikube image load backend.tar
          cd k8s-configs
          kubectl apply -f backend-service.yaml
          kubectl apply -f backend-deployment.yaml
      - name: Test pods
        run: |
          kubectl get pods
      - name: Test service
        run: |
          kubectl get services

  deploy-frontend:
    name: CD Pipeline - Frontend
    runs-on: ubuntu-latest
    needs: start-minikube
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Build Docker Image
        run: |
          cd React
          docker build -t frontend/assignment .
          echo "Verifying images: "
          docker images
      - name: Deploy to Minikube
        run: |
          docker image save -o frontend.tar frontend/assignment
          minikube image load frontend.tar
          cd k8s-configs
          kubectl apply -f frontend-service.yaml
          kubectl apply -f frontend-deployment.yaml
      - name: Test pods
        run: |
          kubectl get pods
      - name: Test service
        run: |
          kubectl get services

      